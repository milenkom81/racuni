-- MySQL Script generated by MySQL Workbench
-- sre 15 maj 2019 13:38:12 CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema InvoiceManagment
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema InvoiceManagment
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `InvoiceManagment` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci ;
USE `InvoiceManagment` ;

-- -----------------------------------------------------
-- Table `InvoiceManagment`.`SchemaVersion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InvoiceManagment`.`SchemaVersion` (
  `idSchemaVersion` BINARY NOT NULL,
  `change_number` INT NULL,
  `version` VARCHAR(45) NULL,
  `applied` DATETIME NULL,
  `applied_by` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `file` VARCHAR(45) NULL,
  PRIMARY KEY (`idSchemaVersion`))
ENGINE = InnoDB;


	-- -----------------------------------------------------
	-- Table `InvoiceManagment`.`Article`
	-- -----------------------------------------------------
	CREATE TABLE IF NOT EXISTS `InvoiceManagment`.`Article` (
	  `idArticle` INT NOT NULL,
	  `barcode` VARCHAR(14) NOT NULL,
	  `name` VARCHAR(300) NOT NULL,
	  `price` DECIMAL(10,2) NOT NULL,
	  `vat` DECIMAL(5,2) NOT NULL,
	  `stock` INT NOT NULL,
	  `deleted` TINYINT(1) DEFAULT false,
	  `modified` TIMESTAMP NOT NULL,
	  `created` TIMESTAMP DEFAULT NOW(),
	  PRIMARY KEY (`idArticle`))
	ENGINE = InnoDB;


	-- -----------------------------------------------------
	-- Table `InvoiceManagment`.`InternalArticle`
	-- -----------------------------------------------------
	CREATE TABLE IF NOT EXISTS `InvoiceManagment`.`InternalArticle` (
	  `idInternalArticle` BINARY NOT NULL,
	  `name` VARCHAR(45) NOT NULL,
	  `price` DECIMAL(10,2) NOT NULL,
	  `vat` DECIMAL(5,2) NOT NULL,
	  `stock` INT NOT NULL,
	  `deleted` TINYINT(1) NOT NULL DEFAULT false,
	  `modified` TIMESTAMP NOT NULL,
	  `created` TIMESTAMP DEFAULT NOW(),
	  `internal_id` VARCHAR(4) NOT NULL,
	  PRIMARY KEY (`idInternalArticle`))
	ENGINE = InnoDB;


	-- -----------------------------------------------------
	-- Table `InvoiceManagment`.`Company`
	-- -----------------------------------------------------
	CREATE TABLE IF NOT EXISTS `InvoiceManagment`.`Company` (
	  `idCompany` BINARY NOT NULL,
	  `name` VARCHAR(45) NOT NULL,
	  `tax_number` VARCHAR(45) NOT NULL,
	  `registration_number` VARCHAR(45) NOT NULL,
	  `phone_number` VARCHAR(45) NOT NULL,
	  `taxpayer` TINYINT(1) NOT NULL,
	  `address` VARCHAR(200) NOT NULL,
	  `deleted` TINYINT(1) NOT NULL DEFAULT false,
	  `modified` TIMESTAMP NOT NULL,
	  `create` TIMESTAMP DEFAULT NOW(),
	  PRIMARY KEY (`idCompany`))
	ENGINE = InnoDB;


	-- -----------------------------------------------------
	-- Table `InvoiceManagment`.`Invoice`
	-- -----------------------------------------------------
	CREATE TABLE IF NOT EXISTS `InvoiceManagment`.`Invoice` (
	  `idInvoice` BINARY NOT NULL,
	  `total` DECIMAL(10,2) NOT NULL,
	  `total_vat` DECIMAL(10,2) NOT NULL,
	  `deleted` TINYINT(1) NOT NULL DEFAULT false,
	  `modified` TIMESTAMP NOT NULL,
	  `created` TIMESTAMP DEFAULT NOW(),
	  `Company_idCompany` BINARY NOT NULL,
	  `Company_idCompany1` BINARY NULL,
	  PRIMARY KEY (`idInvoice`),
	  INDEX `fk_Invoice_Company1_idx` (`Company_idCompany` ASC),
	  INDEX `fk_Invoice_Company2_idx` (`Company_idCompany1` ASC),
	  CONSTRAINT `fk_Invoice_Company1`
		FOREIGN KEY (`Company_idCompany`)
		REFERENCES `InvoiceManagment`.`Company` (`idCompany`)
		ON DELETE NO ACTION
		ON UPDATE NO ACTION,
	  CONSTRAINT `fk_Invoice_Company2`
		FOREIGN KEY (`Company_idCompany1`)
		REFERENCES `InvoiceManagment`.`Company` (`idCompany`)
		ON DELETE NO ACTION
		ON UPDATE NO ACTION)
	ENGINE = InnoDB;




	-- -----------------------------------------------------
	-- Table `InvoiceManagment`.`Invoice_has_InternalArticle`
	-- -----------------------------------------------------
	CREATE TABLE IF NOT EXISTS `InvoiceManagment`.`Invoice_has_InternalArticle` (
	  `Invoice_idInvoice` BINARY NOT NULL,
	  `InternalArticle_idInternalArticle` BINARY NOT NULL,
	  `quantity INT` VARCHAR(45) NOT NULL,
	  PRIMARY KEY (`Invoice_idInvoice`, `InternalArticle_idInternalArticle`),
	  INDEX `fk_Invoice_has_InternalArticle_InternalArticle1_idx` (`InternalArticle_idInternalArticle` ASC),
	  INDEX `fk_Invoice_has_InternalArticle_Invoice_idx` (`Invoice_idInvoice` ASC),
	  CONSTRAINT `fk_Invoice_has_InternalArticle_Invoice`
		FOREIGN KEY (`Invoice_idInvoice`)
		REFERENCES `InvoiceManagment`.`Invoice` (`idInvoice`)
		ON DELETE NO ACTION
		ON UPDATE NO ACTION,
	  CONSTRAINT `fk_Invoice_has_InternalArticle_InternalArticle1`
		FOREIGN KEY (`InternalArticle_idInternalArticle`)
		REFERENCES `InvoiceManagment`.`InternalArticle` (`idInternalArticle`)
		ON DELETE NO ACTION
		ON UPDATE NO ACTION)
	ENGINE = InnoDB;


	-- -----------------------------------------------------
	-- Table `InvoiceManagment`.`Invoice_has_Article`
	-- -----------------------------------------------------
	CREATE TABLE IF NOT EXISTS `InvoiceManagment`.`Invoice_has_Article` (
	  `Invoice_idInvoice` BINARY NOT NULL,
	  `Article_idArticle` INT NOT NULL,
	  `quantity` INT NOT NULL,
	  PRIMARY KEY (`Invoice_idInvoice`, `Article_idArticle`),
	  INDEX `fk_Invoice_has_Article_Article1_idx` (`Article_idArticle` ASC),
	  INDEX `fk_Invoice_has_Article_Invoice1_idx` (`Invoice_idInvoice` ASC),
	  CONSTRAINT `fk_Invoice_has_Article_Invoice1`
		FOREIGN KEY (`Invoice_idInvoice`)
		REFERENCES `InvoiceManagment`.`Invoice` (`idInvoice`)
		ON DELETE NO ACTION
		ON UPDATE NO ACTION,
	  CONSTRAINT `fk_Invoice_has_Article_Article1`
		FOREIGN KEY (`Article_idArticle`)
		REFERENCES `InvoiceManagment`.`Article` (`idArticle`)
		ON DELETE NO ACTION
		ON UPDATE NO ACTION)
	ENGINE = InnoDB;


	INSERT INTO `InvoiceManagment`.`SchemaVersion`
	(`idSchemaVersion`,
	`change_number`,
	`version`,
	`applied`,
	`applied_by`,
	`description`,
	`file`)
	VALUES
	(1,
	1,
	1,
	NOW(),
	"jasa",
	"ustvarjena shema",
	"skripta.sql");


	SET SQL_MODE=@OLD_SQL_MODE;
	SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
	SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;




INSERT INTO Article
(`idArticle`,
`barcode`,
`name`,
`price`,
`vat`,
`stock`,
`deleted`,
`created`,
`modified`)
VALUES
(100000,"123123","IZDELEK",10.2,5.2, 10, false, NOW(),NOW());

SELECT * FROM Article;



DELIMITER $$
CREATE TRIGGER trg_UpdateTimeArtikel
ON Articel
AFTER UPDATE
AS
    UPDATE Articel
    SET modified = NOW()
    WHERE idArticel IN (SELECT DISTINCT idArticel FROM Inserted)
DELIMITER ;

DELIMITER $$
CREATE TRIGGER trg_UpdateTimeCompany
ON Company
AFTER UPDATE
AS
    UPDATE Company
    SET modified = NOW()
    WHERE idCompany IN (SELECT DISTINCT idCompany FROM Inserted)
DELIMITER ;

DELIMITER $$
CREATE TRIGGER trg_UpdateInvoice
ON Invoice
AFTER UPDATE
AS
    UPDATE Invoice
    SET modified = NOW()
    WHERE idInvoice IN (SELECT DISTINCT idInvoice FROM Inserted)
DELIMITER ;

DELIMITER $$
CREATE TRIGGER trg_UpdateInvoiceArticle
ON InvoiceArticle
AFTER UPDATE
AS
    UPDATE InvoiceArticle
    SET modified = NOW()
    WHERE idInvoiceArticle IN (SELECT DISTINCT idInvoiceArticle FROM Inserted)
DELIMITER ;

INSERT INTO `InvoiceManagment`.`Company`
(`idCompany`,
`name`,
`tax_number`,
`registration_number`,
`phone_number`,
`taxpayer`,
`address`,
`deleted`,
`modified`,
`create`)
VALUES
(1,"kema","fsafasf","asfaf","000",true,"adad",false,null,now());

SET SQL_SAFE_UPDATES = 0;

UPDATE Article
SET name = "3114"
WHERE barcode = "035200264013";

SELECT * FROM Article;